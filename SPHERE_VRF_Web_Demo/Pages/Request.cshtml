@page
@model RequestModel
@{
    ViewData["Request"] = "Request";


}
 <div class="container mt-5">
    <h1 class="text-center text-light mb-4">VRF Request</h1>

    <form id="vrfForm">
        <div class="mb-3">
            <label for="rangeMin" class="form-label" text-light>Minimum Value</label>
            <input type="number" class="form-control" id="rangeMin" placeholder="Enter minimum value" required>
        </div>

        <div class="mb-3">
            <label for="rangeMax" class="form-label" text-light>Maximum Value</label>
            <input type="number" class="form-control" id="rangeMax" placeholder="Enter maximum value" text-light required>
        </div>

        <button type="submit" class="btn btn-primary w-100">Request VRF</button>
    </form>

    <div id="result" class="mt-4"></div>
</div>


<script>
    const form = document.getElementById('vrfForm');
    const resultDiv = document.getElementById('result');

    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        console.log("Form submitted!"); // ✅ Confirm script is working

        const rangeMin = document.getElementById('rangeMin').value;
        const rangeMax = document.getElementById('rangeMax').value;

        const requestData = {
            RequestorID: "ClientTest",
            RangeMin: parseInt(rangeMin),
            RangeMax: parseInt(rangeMax)
        };

        console.log("Sending request to /request with:", requestData); // ✅ Confirm payload
        const startTime = performance.now();
        try 
        {
            
            const response = await fetch('http://10.187.1.1:51515/request', {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(requestData)
            });


            const endTime = performance.now(); 
            const elapsed = (endTime - startTime).toFixed(2);

            console.log("Response:", response);

            if (response.ok) {
                const data = await response.json();
                resultDiv.innerHTML = `
                    <div class="alert alert-success">
                        <strong>VRF Request Successful!</strong><br>
                        <strong>Result:</strong> ${data.rangedRandomNumber}<br>
                        <strong>Elapsed Time(ms):</strong> ${elapsed} ms<br><br>
                        <button id="toggleDetails" class="btn btn-primary btn-sm">View Details</button>
                        <div id="details" style="display:none; margin-top: 10px;">
                            <pre>${JSON.stringify(data, null, 2)}</pre>
                        </div>
                    </div>
                `;


                   // Add button functionality
                const toggleBtn = document.getElementById('toggleDetails');
                const detailsDiv = document.getElementById('details');

                toggleBtn.addEventListener('click', () => {
                    if (detailsDiv.style.display === "none") {
                        detailsDiv.style.display = "block";
                        toggleBtn.innerText = "Hide Details";
                    } else {
                        detailsDiv.style.display = "none";
                        toggleBtn.innerText = "View Details";
                    }
                });

            } 
            else 
            {
                resultDiv.innerHTML = `
                    <div class="alert alert-danger">
                        Error: ${response.status} ${response.statusText}
                    </div>
                `;
            }
        } 
        catch (error) 
        {
            console.error("Fetch failed:", error); 
            resultDiv.innerHTML = `
                <div class="alert alert-danger">
                    Error sending request: ${error.message}
                </div>
            `;
        }
    });
</script>

